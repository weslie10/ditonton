// Mocks generated by Mockito 5.0.15 from annotations
// in core/test/presentation/bloc/watchlist_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:core/data/models/movie_table.dart' as _i7;
import 'package:core/domain/repositories/watchlist_repository.dart' as _i3;
import 'package:core/domain/usecases/get_watchlist_movies.dart' as _i4;
import 'package:core/domain/usecases/remove_watchlist_movies.dart' as _i8;
import 'package:core/domain/usecases/save_watchlist_movies.dart' as _i9;
import 'package:core/utils/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeWatchlistRepository_1 extends _i1.Fake
    implements _i3.WatchlistRepository {}

/// A class which mocks [GetWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlist extends _i1.Mock implements _i4.GetWatchlist {
  MockGetWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.MovieTable>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  Future<_i2.Either<_i6.Failure, List<_i7.MovieTable>>>.value(
                      _FakeEither_0<_i6.Failure, List<_i7.MovieTable>>()))
          as _i5.Future<_i2.Either<_i6.Failure, List<_i7.MovieTable>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i8.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_1()) as _i3.WatchlistRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(_i7.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i9.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_1()) as _i3.WatchlistRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(_i7.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

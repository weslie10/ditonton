// Mocks generated by Mockito 5.0.16 from annotations
// in series/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:convert' as _i14;
import 'dart:typed_data' as _i15;

import 'package:core/core.dart' as _i8;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:series/data/datasources/series_remote_data_source.dart' as _i12;
import 'package:series/data/models/episode_response.dart' as _i4;
import 'package:series/data/models/series_detail_model.dart' as _i3;
import 'package:series/data/models/series_model.dart' as _i13;
import 'package:series/domain/entities/episode_enitity.dart' as _i11;
import 'package:series/domain/entities/series.dart' as _i9;
import 'package:series/domain/entities/series_detail.dart' as _i10;
import 'package:series/domain/repositories/series_repository.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeSeriesDetailResponse_1 extends _i1.Fake
    implements _i3.SeriesDetailResponse {}

class _FakeEpisodeResponseModel_2 extends _i1.Fake
    implements _i4.EpisodeResponseModel {}

class _FakeResponse_3 extends _i1.Fake implements _i5.Response {}

class _FakeStreamedResponse_4 extends _i1.Fake implements _i5.StreamedResponse {
}

/// A class which mocks [SeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRepository extends _i1.Mock implements _i6.SeriesRepository {
  MockSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Series>>> getNowPlayingSeries() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingSeries, []),
          returnValue: Future<_i2.Either<_i8.Failure, List<_i9.Series>>>.value(
              _FakeEither_0<_i8.Failure, List<_i9.Series>>())) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i9.Series>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Series>>> getPopularSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularSeries, []),
          returnValue: Future<_i2.Either<_i8.Failure, List<_i9.Series>>>.value(
              _FakeEither_0<_i8.Failure, List<_i9.Series>>())) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i9.Series>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Series>>> getTopRatedSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedSeries, []),
          returnValue: Future<_i2.Either<_i8.Failure, List<_i9.Series>>>.value(
              _FakeEither_0<_i8.Failure, List<_i9.Series>>())) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i9.Series>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i10.SeriesDetail>> getSeriesDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesDetail, [id]),
          returnValue: Future<_i2.Either<_i8.Failure, _i10.SeriesDetail>>.value(
              _FakeEither_0<_i8.Failure, _i10.SeriesDetail>())) as _i7
          .Future<_i2.Either<_i8.Failure, _i10.SeriesDetail>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i11.EpisodeEntity>> getSeriesEpisode(
          int? id, int? season) =>
      (super.noSuchMethod(Invocation.method(#getSeriesEpisode, [id, season]),
              returnValue:
                  Future<_i2.Either<_i8.Failure, _i11.EpisodeEntity>>.value(
                      _FakeEither_0<_i8.Failure, _i11.EpisodeEntity>()))
          as _i7.Future<_i2.Either<_i8.Failure, _i11.EpisodeEntity>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Series>>>
      getSeriesRecommendations(int? id) => (super.noSuchMethod(
          Invocation.method(#getSeriesRecommendations, [id]),
          returnValue: Future<_i2.Either<_i8.Failure, List<_i9.Series>>>.value(
              _FakeEither_0<_i8.Failure, List<_i9.Series>>())) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i9.Series>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Series>>> searchSeries(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchSeries, [query]),
          returnValue: Future<_i2.Either<_i8.Failure, List<_i9.Series>>>.value(
              _FakeEither_0<_i8.Failure, List<_i9.Series>>())) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i9.Series>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRemoteDataSource extends _i1.Mock
    implements _i12.SeriesRemoteDataSource {
  MockSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i13.SeriesModel>> getNowPlayingSeries() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingSeries, []),
              returnValue:
                  Future<List<_i13.SeriesModel>>.value(<_i13.SeriesModel>[]))
          as _i7.Future<List<_i13.SeriesModel>>);
  @override
  _i7.Future<List<_i13.SeriesModel>> getPopularSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularSeries, []),
              returnValue:
                  Future<List<_i13.SeriesModel>>.value(<_i13.SeriesModel>[]))
          as _i7.Future<List<_i13.SeriesModel>>);
  @override
  _i7.Future<List<_i13.SeriesModel>> getTopRatedSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedSeries, []),
              returnValue:
                  Future<List<_i13.SeriesModel>>.value(<_i13.SeriesModel>[]))
          as _i7.Future<List<_i13.SeriesModel>>);
  @override
  _i7.Future<_i3.SeriesDetailResponse> getSeriesDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesDetail, [id]),
              returnValue: Future<_i3.SeriesDetailResponse>.value(
                  _FakeSeriesDetailResponse_1()))
          as _i7.Future<_i3.SeriesDetailResponse>);
  @override
  _i7.Future<_i4.EpisodeResponseModel> getSeriesEpisode(int? id, int? season) =>
      (super.noSuchMethod(Invocation.method(#getSeriesEpisode, [id, season]),
              returnValue: Future<_i4.EpisodeResponseModel>.value(
                  _FakeEpisodeResponseModel_2()))
          as _i7.Future<_i4.EpisodeResponseModel>);
  @override
  _i7.Future<List<_i13.SeriesModel>> getSeriesRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesRecommendations, [id]),
              returnValue:
                  Future<List<_i13.SeriesModel>>.value(<_i13.SeriesModel>[]))
          as _i7.Future<List<_i13.SeriesModel>>);
  @override
  _i7.Future<List<_i13.SeriesModel>> searchSeries(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchSeries, [query]),
              returnValue:
                  Future<List<_i13.SeriesModel>>.value(<_i13.SeriesModel>[]))
          as _i7.Future<List<_i13.SeriesModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i5.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i14.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i14.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i14.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i14.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i15.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i15.Uint8List>.value(_i15.Uint8List(0)))
          as _i7.Future<_i15.Uint8List>);
  @override
  _i7.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i5.StreamedResponse>.value(_FakeStreamedResponse_4()))
          as _i7.Future<_i5.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
